--------------------Introduction
-ORM Framework - Object Relational Mapping
-Connectors


--------------------Prerequisites for Hibernate
-Core java
-SQL Concepts
-JDBC


--------------------Hibernate Theory
-Java (Variable, Objects) (Temporary storage)
-Hibernate----> Persistence of data (Storing the data into db)
-To connect Java app with DB - JDBC
-Hibernate is one of the tool to Implement ORM concept (some other tools - iBatis, JPA(Standard), TopLink)


--------------------Practical
-HibernateDemo
-mysql and hibernate maven dependencies
-SessionFactory


--------------------How to add Hibernate Plugin in Eclipse
-JBoss downloading from Eclipse marketplace


--------------------Configuration File
-Hibernate.cfg.xml File
-update property in xml File


--------------------Working
-HibernateDemo Project


--------------------Show SQL Property
-show_sql property in xml File


--------------------Annotation 
-@Entity(name="table_name")
-@Id
-@Table
-Difference between @Entity and @Table
-@Column(name="column_name")
-@Transient - it will not be stored into db, it is for Tmeporary data 


--------------------Fetching Data Using Hibernate 
-Session.get() method


--------------------How to use Embeddable Object 
-@Embeddable


--------------------Mapping Relations Theory
-@OneToOne
-@OneToMany<->
-@ManyToOne<->
-@ManyToMany
-@OneToMany
-(MappedBy"") property


--------------------Mapping Relations Practical
-HibernateDemo Project


--------------------Fetch EAGER LAZY
-HibernateDemo Project
-By default fetch type is LAZY


--------------------Hibernate Caching 
-Instead of hitting the db again and again for the same data fetching/access in same session(First level cache)(It is given by hibernate by default) , 2 different sessions (Second level cache)(we need to configure this by using third party library - ehcache (most prefered)/os/swarm), store that data into hibernate cache for fast access
-For configuration - ehcache jar file (pom.xml), hibernate-cache jar file(pom.xml), hibernate.cfg.xml file, two annotations for entity - @cachable (to make entity cachable), @cache (for caching stratagies)


--------------------Caching Level 1
-HibernateDemo Project


--------------------Caching Level 2
-HibernateDemo Project

--------------------Caching Level 2 with Query


--------------------Hibernate Query Language Theory (HQL)


--------------------Hibernate Query Language (HQL) part 1


--------------------Hibernate Query Language (HQL) part 2


--------------------Hibernate Query Language (HQL) part 3


--------------------Hibernate Object States Persistence Life Cycle


--------------------Hibernate Object States  (Practical)


--------------------Hibernate Get vs Load


--------------------What is JPA? & JPA Implementation